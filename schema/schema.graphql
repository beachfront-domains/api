scalar DateTime
scalar Decimal

# import from "bag.graphql"
# import from "customer.graphql"
# import from "error.graphql"
# import from "login.graphql"
# import from "domain.graphql"
# import from "extension.graphql"
# import from "order.graphql"
# import from "pagination.graphql"
# import from "search.graphql"
# import from "session.graphql"

"""
All the queries that enable the registrar API to function
"""

type BooleanResponse {
  "Was the operation successful?"
  success: Boolean
}

type Query {
  """
  Bag queries
  """
  bag(params: BagQuery): BagResponse
  bags(params: BagsQuery, pagination: PaginationOptions): BagsResponse

  """
  Customer queries
  """
  customer(params: CustomerQuery): CustomerResponse
  customers(params: CustomersQuery, pagination: PaginationOptions): CustomersResponse

  """
  Domain queries
  """
  domain(params: DomainQuery): DomainResponse
  domains(params: DomainsQuery, pagination: PaginationOptions): DomainsResponse

  """
  Extension queries
  """
  extension(params: ExtensionQuery): ExtensionResponse
  extensions(params: ExtensionsQuery, pagination: PaginationOptions): ExtensionsResponse

  # """
  # Invoice queries
  # """
  # invoice(params: InvoiceQuery): InvoiceResponse
  # invoices(params: InvoicesQuery, pagination: PaginationOptions): InvoicesResponse

  """
  Login query
  """
  login(params: LoginQuery): LoginResponse

  """
  Order queries
  """
  order(params: OrderQuery): OrderResponse
  orders(params: OrdersQuery, pagination: PaginationOptions): OrdersResponse

  # """
  # Payment method queries
  # """
  # paymentMethod(params: PaymentMethodQuery): PaymentMethodResponse
  # paymentMethods(params: PaymentMethodsQuery, pagination: PaginationOptions): PaymentMethodsResponse

  """
  Search queries
  """
  search(params: SearchQuery, pagination: PaginationOptions): SearchResponse

  """
  Session queries
  """
  session(params: SessionQuery): SessionResponse
  sessions(params: SessionsQuery, pagination: PaginationOptions): SessionsResponse
}

type Mutation {
  # """
  # Authentication mutations
  # """
  # login(params: LoginInput): LoginResponse
  # verify(params: TokenInput): SessionResponse

  """
  Bag mutations
  """
  createBag(params: BagInput): BagResponse
  deleteBag(params: BagQuery): BooleanResponse
  updateBag(updates: BagInput, params: BagQuery): BagResponse

  """
  Customer mutations
  """
  createCustomer(params: CustomerInput): CustomerResponse
  deleteCustomer(params: CustomerQuery): BooleanResponse
  updateCustomer(updates: CustomerInput, params: CustomerQuery): CustomerResponse

  """
  Domain mutations
  """
  createDomain(params: DomainInput): DomainResponse
  deleteDomain(params: DomainQuery): BooleanResponse
  updateDomain(params: DomainQuery, updates: DomainInput): DomainResponse

  """
  Extension mutations
  """
  createExtension(params: ExtensionInput): ExtensionResponse
  deleteExtension(params: ExtensionQuery): BooleanResponse
  updateExtension(updates: ExtensionInput, params: ExtensionQuery): ExtensionResponse

  # """
  # Invoice mutations
  # """
  # createInvoice(params: InvoiceInput): InvoiceResponse
  # deleteInvoice(params: InvoiceQuery): BooleanResponse
  # updateInvoice(updates: InvoiceInput, params: InvoiceQuery): InvoiceResponse

  """
  Login mutations
  """
  createLogin(params: LoginInput): LoginResponse
  deleteLogin(params: LoginQuery): BooleanResponse

  """
  Order mutations
  """
  createOrder(params: OrderInput): OrderResponse
  deleteOrder(params: OrderQuery): BooleanResponse
  updateOrder(updates: OrderInput, params: OrderQuery): OrderResponse

  # """
  # Payment method mutations
  # """
  # createPaymentMethod(params: PaymentMethodInput): PaymentMethodResponse
  # deletePaymentMethod(params: PaymentMethodQuery): BooleanResponse
  # updatePaymentMethod(updates: PaymentMethodInput, params: PaymentMethodQuery): PaymentMethodResponse

  """
  Session mutations
  """
  createSession(params: SessionInput): SessionResponse
  deleteSession(params: SessionQuery): BooleanResponse
  updateSession(updates: SessionInput, params: SessionQuery): SessionResponse
}
