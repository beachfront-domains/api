scalar DateTime
scalar Decimal

# import CustomerInput from "customer.graphql"
# import CustomerQuery from "customer.graphql"
# import CustomerResponse from "customer.graphql"
# import CustomersQuery from "customer.graphql"
# import CustomersResponse from "customer.graphql"

# import DomainInput from "domain.graphql"
# import DomainQuery from "domain.graphql"
# import DomainResponse from "domain.graphql"
# import DomainsQuery from "domain.graphql"
# import DomainsResponse from "domain.graphql"
# import RegistrantInput from "domain.graphql"

# import ExtensionInput from "extension.graphql"
# import ExtensionQuery from "extension.graphql"
# import ExtensionResponse from "extension.graphql"
# import ExtensionsQuery from "extension.graphql"
# import ExtensionsResponse from "extension.graphql"

# import LoginInput from "access.graphql"
# import LoginResponse from "access.graphql"
# import TokenInput from "access.graphql"

# import OrderInput from "order.graphql"
# import OrderQuery from "order.graphql"
# import OrderResponse from "order.graphql"
# import OrdersQuery from "order.graphql"
# import OrdersResponse from "order.graphql"

# import PaginationOptions from "pagination.graphql"

# import SearchQuery from "search.graphql"
# import SearchResponse from "search.graphql"

# import SessionInput from "session.graphql"
# import SessionQuery from "session.graphql"
# import SessionResponse from "session.graphql"
# import SessionsQuery from "session.graphql"
# import SessionsResponse from "session.graphql"

"""
All the queries that enable the registrar API to function
"""

type BooleanResponse {
  "Was the operation successful?"
  success: Boolean
}

type Query {
  """
  Customer queries
  """
  customer(options: CustomerQuery): CustomerResponse
  customers(options: CustomersQuery, pagination: PaginationOptions): CustomersResponse
  """
  Domain queries
  """
  domain(options: DomainQuery): DomainResponse
  domains(options: DomainsQuery, pagination: PaginationOptions): DomainsResponse
  """
  Extension queries
  """
  extension(options: ExtensionQuery): ExtensionResponse
  extensions(options: ExtensionsQuery, pagination: PaginationOptions): ExtensionsResponse
  """
  Order queries
  """
  order(options: OrderQuery): OrderResponse
  orders(options: OrdersQuery, pagination: PaginationOptions): OrdersResponse
  """
  Search queries
  """
  search(options: SearchQuery, pagination: PaginationOptions): SearchResponse
  """
  Session queries
  """
  session(options: SessionQuery): SessionResponse
  sessions(options: SessionsQuery, pagination: PaginationOptions): SessionsResponse
}

type Mutation {
  """
  Authentication mutations
  """
  login(options: LoginInput): LoginResponse
  verify(options: TokenInput): SessionResponse
  """
  Customer mutations
  """
  createCustomer(options: CustomerInput): CustomerResponse
  deleteCustomer(options: CustomerQuery): BooleanResponse
  updateCustomer(changes: CustomerInput, options: CustomerQuery): CustomerResponse
  """
  Domain mutations
  """
  createDomain(options: DomainInput): DomainResponse
  deleteDomain(options: DomainQuery): BooleanResponse
  updateDomain(changes: DomainInput, options: DomainQuery): DomainResponse
  """
  Extension mutations
  """
  createExtension(options: ExtensionInput): ExtensionResponse
  deleteExtension(options: ExtensionQuery): BooleanResponse
  updateExtension(changes: ExtensionInput, options: ExtensionQuery): ExtensionResponse
  """
  Order mutations
  """
  createOrder(options: OrderInput): OrderResponse
  deleteOrder(options: OrderQuery): BooleanResponse
  updateOrder(changes: OrderInput, options: OrderQuery): OrderResponse
  """
  Session mutations
  """
  createSession(options: SessionInput): SessionResponse
  deleteSession(options: SessionQuery): BooleanResponse
  updateSession(changes: SessionInput, options: SessionQuery): SessionResponse
}
